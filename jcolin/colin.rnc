start =
  element colin {
    attribute toolname { text },
    attribute version { text },
    attribute prompt { text }?,
    # Commands
    element commands {
      (command
       | element container {
           attribute name { text },
           element description { text },
           command+
         })*
    },
    # TestCases
    element testcases {
      element testcase {
        attribute name { text },
        attribute description { text },
        (element runCommand {
           attribute name { text },
           attribute var { text }?,
           text
         }
         | element runScript {
             attribute name { text },
             attribute var { text }?,
             attribute args { text }?,
             text
           }
         | element assertEquals {
             attribute var { text },
             element value { text }
           }
         | element assertRegex {
             attribute var { text },
             element value { text }
           })+
      }*
    }*
  }
# Schema for commands
command =
  element command {
    attribute name { text },
    attribute impl { text },
    element description { text },
    element args {
      element arg {
        attribute name { text },
        (element Or { Type+ }
         | element And { Type+ }
         | Type)?
      }*
    }?,
    element output {
      attribute display { "ALL" | "INTERNAL" | "EXTERNAL" | "NONE" }?,
      Type*
    }?
  }
Type = String | Integer | Double | Boolean | File
String =
  element String {
    attribute pattern { text }?
  }
Integer =
  element Integer {
    attribute min { text }?,
    attribute max { text }?
  }
Double =
  element Double {
    attribute min { text }?,
    attribute max { text }?
  }
Boolean = element Boolean { text }
File =
  element File {
    attribute schema { text }?,
    attribute shouldExist { text }?
  }
